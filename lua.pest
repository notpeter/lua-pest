DOC = _{ ( NUMERAL ~ "\n" )+ }

NUMERAL = { HEX_FLOAT | HEX_INTEGER | FLOAT | INTEGER }
HEX_FLOAT = {
    ("0x" | "0X")
    ~ ASCII_HEX_DIGIT+
    ~ ("." ~ ASCII_HEX_DIGIT*)?
    ~ FLOAT_HEX_EXPONENT?
    ~ FRACTIONAL_PART?
}
FLOAT = @{
	( ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT* ~ FLOAT_LITERAL_EXPONENT? )
	| ( "." ~ ASCII_DIGIT+ ~ FLOAT_LITERAL_EXPONENT? )
    | (ASCII_DIGIT+ ~ FLOAT_LITERAL_EXPONENT)
}
FLOAT_LITERAL_EXPONENT = { ("e" | "E") ~ ("+" | "-")? ~ ASCII_DIGIT+ }
FLOAT_HEX_EXPONENT = { ("e" | "E") ~ (("+" | "-")? ~ ASCII_DIGIT+)? }
FRACTIONAL_PART = { ("p" | "P") ~ ("+" | "-")? ~ ASCII_DIGIT+ }
HEX_INTEGER = { ("0x" | "0X") ~ ASCII_HEX_DIGIT+ }
INTEGER = { ASCII_DIGIT+ }


/*
ASCII_DIGIT	        = { '0'..'9' }
ASCII_NONZERO_DIGIT	= { '1'..'9' }
ASCII_BIN_DIGIT	    = { '0'..'1' }
ASCII_OCT_DIGIT	    = { '0'..'7' }
ASCII_HEX_DIGIT	    = { '0'..'9' | 'a'..'f' | 'A'..'F' }
ASCII_ALPHA_LOWER	= { 'a'..'z' }
ASCII_ALPHA_UPPER	= { 'A'..'Z' }
ASCII_ALPHA         = { 'a'..'z' | 'A'..'Z' }
ASCII_ALPHANUMERIC	= { ASCII_DIGIT | ASCII_ALPHA }
NEWLINE             = { "\n" | "\r\n" | "\r" }
*/
